[{"E:\\myapp\\my-app\\src\\index.js":"1","E:\\myapp\\my-app\\src\\App.js":"2","E:\\myapp\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Nam\\Desktop\\my-app\\src\\index.js":"4","C:\\Users\\Nam\\Desktop\\my-app\\src\\App.js":"5","C:\\Users\\Nam\\Desktop\\my-app\\src\\reportWebVitals.js":"6"},{"size":526,"mtime":1607037271028,"results":"7","hashOfConfig":"8"},{"size":4718,"mtime":1607076205665,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":526,"mtime":1607037271028,"results":"11","hashOfConfig":"12"},{"size":4718,"mtime":1607076205665,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"150vqc9",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2uqdkt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\myapp\\my-app\\src\\index.js",[],["30","31"],"E:\\myapp\\my-app\\src\\App.js",["32","33","34"],"E:\\myapp\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Nam\\Desktop\\my-app\\src\\index.js",[],["35","36"],"C:\\Users\\Nam\\Desktop\\my-app\\src\\App.js",["37","38","39"],"import React, {useEffect, useState} from 'react';\nimport { Card, CardColumns, Button , ListGroup, ListGroupItem, Container, Row, Col, Form} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nvar stats = {\n  \n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  company: \"Facebook\", //had to hard code because api didn't contain company\n  title: \"Software Engineer\", \n  address: \"\",\n  set setEmail(m){\n    this.email = m;\n  }\n}\n\nfunction UpdateEmail(props){\n  const emailInput = React.createRef();\n  const onSubmitHandler = (parameter) => {\n     \n    parameter.preventDefault();\n    props.setEmail(emailInput.current.value)\n    var temp = props.person;\n    temp.email = emailInput.current.value;\n    props.setPerson(temp)\n  };\n  \n  return(\n    <Container>\n      <Row>\n        <Col>\n          <Form onSubmit  = {onSubmitHandler}>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control \n                    type=\"email\" \n                    ref ={emailInput} \n                    placeholder=\"Enter email you'd like to change to.\" \n                    required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Col sm={{ }}>\n                <Button type = \"submit\" >Change</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n  \n}\n\nfunction Profile(props){\n  useEffect(() => {\n    let request = async () =>{\n      try {\n        const url = \"https://api.randomuser.me/\";\n        const response = await fetch(url);\n        const data = await response.json();\n        props.setPerson(data.results[0]);\n        props.setLoading(false);\n        props.setEmail(props.person.email);\n        stats.firstName = props.person.name.first;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    request();\n  }, [] );\n  return(\n    <div> {props.loading || !props.person ? (\n      <div> loading... </div>\n    ) : (\n      \n      <Container fluid>\n        <Row>\n          <Col>\n              <Card className = \"Card1\">\n                <Card.Body>\n                  <Card.Title>Profile</Card.Title>\n                  <Card.Img variant=\"top\" src = {props.person.picture.large} />\n                </Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                  <ListGroupItem>First name: {props.person.name.first}</ListGroupItem>\n                  <ListGroupItem>Last name: {props.person.name.last}</ListGroupItem>\n                  <ListGroupItem>Email: {props.person.email}</ListGroupItem>\n                  <ListGroupItem>Company: {stats.company}</ListGroupItem>\n                  <ListGroupItem>Title: {stats.title}</ListGroupItem>\n                  <ListGroupItem>Address: {props.person.location.street.number + \" \" + props.person.location.street.name + \", \" \n                    + props.person.location.city + \", \" + props.person.location.postcode + \", \" + props.person.location.country }</ListGroupItem>\n                </ListGroup>\n              </Card>\n            </Col>\n        </Row>\n      </Container>\n    )} </div>\n    \n    \n  );\n}\n\n//this function would be the patch function I would use if using the correct api\n//cannot use this patch function because the api randomizes every fetch call\nfunction Patch(props){\n  \n  useEffect(() => {\n    let handleSubmit = async (event) => {\n      try {\n        fetch(\"https://api.randomuser.me/\", {\n        method: \"PATCH\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: props.email\n        })\n      })\n        .then(response => response.json())\n        .then(json => console.log(json))\n        console.log(\"200 OK\")\n      } catch (error) {\n        console.log(\"Error: 400\")\n      }\n    };\n    try {\n      handleSubmit();\n    } catch (error) {\n      console.log(\"ERROR: 400\")\n    }\n    \n  }, []);\n  \n\n  return null;\n}\n\nfunction App(props) {\n  const [loading,setLoading] = useState(true);\n  const [person, setPerson] = useState(null);\n  const [email, setEmail] = useState(stats.email);\n  return (\n    <div className=\"App\">\n      \n      <div className = \"App-header\"> {props.title} </div>\n      <Profile email = {email} setEmail = {setEmail} loading = {loading} setLoading = {setLoading} person = {person} setPerson = {setPerson}/>\n      <UpdateEmail email = {email} setEmail = {setEmail} person = {person} setPerson = {setPerson}/>\n      <Patch email = {email}/>\n    </div>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\Nam\\Desktop\\my-app\\src\\reportWebVitals.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":16,"nodeType":"46","messageId":"47","endLine":2,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":78,"column":6,"nodeType":"50","endLine":78,"endColumn":8,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":141,"column":6,"nodeType":"50","endLine":141,"endColumn":8,"suggestions":"53"},{"ruleId":"40","replacedBy":"54"},{"ruleId":"42","replacedBy":"55"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":16,"nodeType":"46","messageId":"47","endLine":2,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":78,"column":6,"nodeType":"50","endLine":78,"endColumn":8,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"52","line":141,"column":6,"nodeType":"50","endLine":141,"endColumn":8,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'CardColumns' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'props.email'. Either include it or remove the dependency array.",["61"],["58"],["59"],["62"],["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"64","fix":"68"},{"desc":"66","fix":"69"},"Update the dependencies array to be: [props]",{"range":"70","text":"71"},"Update the dependencies array to be: [props.email]",{"range":"72","text":"73"},{"range":"74","text":"71"},{"range":"75","text":"73"},[2044,2046],"[props]",[4108,4110],"[props.email]",[2044,2046],[4108,4110]]